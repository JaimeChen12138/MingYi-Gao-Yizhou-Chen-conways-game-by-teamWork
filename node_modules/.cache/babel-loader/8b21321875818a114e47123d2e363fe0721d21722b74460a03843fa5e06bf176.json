{"ast":null,"code":"var _jsxFileName = \"/Users/mingyi/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/880f3a41aabc1de827652c1b6dba9503/Message/MessageTemp/ad7471183d6d3dc2ec94ad2151e924d5/File/conways-game-by-mingyigao0322/src/components/GameOfLife.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Grid from \"./Grid\";\nimport \"./GameOfLife.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameOfLife = () => {\n  _s();\n  const [numRows, setNumRows] = useState(20);\n  const [numCols, setNumCols] = useState(20);\n  const [grid, setGrid] = useState([]);\n  const [livingCells, setLivingCells] = useState(0);\n  const [heightError, setHeightError] = useState(\"\");\n  const [tempRows, setTempRows] = useState(numRows);\n  const [tempCols, setTempCols] = useState(numCols);\n  const [autoplayInterval, setAutoplayInterval] = useState(null);\n  useEffect(() => {\n    initializeGrid();\n  }, []);\n  useEffect(() => {\n    countLivingCells();\n  }, [grid]);\n  useEffect(() => {\n    initializeGrid();\n  }, [numRows, numCols]);\n  const initializeGrid = () => {\n    if (numRows > 0 && numCols > 0) {\n      const newGrid = Array.from({\n        length: numRows\n      }, () => Array.from({\n        length: numCols\n      }, () => Math.random() < 0.05 ? 1 : 0));\n      setGrid(newGrid);\n    }\n  };\n  const toggleCell = (i, j) => {\n    const newGrid = [...grid];\n    newGrid[i][j] = newGrid[i][j] ? 0 : 1;\n    setGrid(newGrid);\n  };\n  const countLivingCells = () => {\n    let count = 0;\n    grid.forEach(row => {\n      row.forEach(cell => {\n        if (cell) count++;\n      });\n    });\n    setLivingCells(count);\n  };\n  const resetGrid = () => {\n    setNumRows(20);\n    setNumCols(20);\n    setTempCols(20);\n    setTempRows(20);\n    setHeightError(\"\");\n    initializeGrid();\n  };\n  const stepSimulation = () => {\n    const newGrid = [];\n    for (let i = 0; i < numRows; i++) {\n      const newRow = [];\n      for (let j = 0; j < numCols; j++) {\n        const neighbors = countNeighbors(i, j);\n        if (grid[i][j] === 1) {\n          if (neighbors < 2 || neighbors > 3) {\n            newRow.push(0); // Rule 1 and Rule 3\n          } else {\n            newRow.push(1); // Rule 2\n          }\n        } else {\n          if (neighbors === 3) {\n            newRow.push(1); // Rule 4\n          } else {\n            newRow.push(0);\n          }\n        }\n      }\n      newGrid.push(newRow);\n    }\n    setGrid(newGrid);\n  };\n  const countNeighbors = (i, j) => {\n    const offsets = [[-1, -1], [-1, 0], [-1, 1], [0, -1], [0, 1], [1, -1], [1, 0], [1, 1]];\n    let count = 0;\n    offsets.forEach(([dx, dy]) => {\n      const ni = i + dx;\n      const nj = j + dy;\n      if (ni >= 0 && ni < numRows && nj >= 0 && nj < numCols && grid[ni][nj] === 1) {\n        count++;\n      }\n    });\n    return count;\n  };\n  const handleInputChange = (e, setter) => {\n    const value = parseInt(e.target.value);\n    if (!isNaN(value) && value >= 3 && value <= 40) {\n      setter(value);\n      setHeightError(\"\");\n    } else {\n      setHeightError(\"Please enter a number between 3 and 40\");\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      handleInputChange({\n        target: {\n          value: tempRows\n        }\n      }, setNumRows);\n      handleInputChange({\n        target: {\n          value: tempCols\n        }\n      }, setNumCols);\n      initializeGrid();\n    }\n  };\n  const handleAutoplay = () => {\n    if (autoplayInterval) {\n      clearInterval(autoplayInterval);\n      setAutoplayInterval(null);\n    } else {\n      const interval = setInterval(stepSimulation, 2000);\n      setAutoplayInterval(interval);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Living Cells: \", livingCells]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Set the number of rows and columns, then hit 'Enter'.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: tempRows,\n          onChange: e => handleInputChange(e, setTempRows),\n          onKeyDown: handleKeyDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: tempCols,\n          onChange: e => handleInputChange(e, setTempCols),\n          onKeyDown: handleKeyDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), heightError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: heightError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGrid,\n        children: \"Reset Grid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stepSimulation,\n        children: \"Step\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAutoplay,\n        children: autoplayInterval ? \"Stop Autoplay\" : \"Start Autoplay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      grid: grid,\n      toggleCell: toggleCell\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(GameOfLife, \"P8R5ngcRXguUqfyLIlxJ+ksQVyI=\");\n_c = GameOfLife;\nexport default GameOfLife;\nvar _c;\n$RefreshReg$(_c, \"GameOfLife\");","map":{"version":3,"names":["React","useState","useEffect","Grid","jsxDEV","_jsxDEV","GameOfLife","_s","numRows","setNumRows","numCols","setNumCols","grid","setGrid","livingCells","setLivingCells","heightError","setHeightError","tempRows","setTempRows","tempCols","setTempCols","autoplayInterval","setAutoplayInterval","initializeGrid","countLivingCells","newGrid","Array","from","length","Math","random","toggleCell","i","j","count","forEach","row","cell","resetGrid","stepSimulation","newRow","neighbors","countNeighbors","push","offsets","dx","dy","ni","nj","handleInputChange","e","setter","value","parseInt","target","isNaN","handleKeyDown","key","handleAutoplay","clearInterval","interval","setInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onKeyDown","onClick","_c","$RefreshReg$"],"sources":["/Users/mingyi/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/880f3a41aabc1de827652c1b6dba9503/Message/MessageTemp/ad7471183d6d3dc2ec94ad2151e924d5/File/conways-game-by-mingyigao0322/src/components/GameOfLife.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Grid from \"./Grid\";\nimport \"./GameOfLife.css\";\n\nconst GameOfLife = () => {\n  const [numRows, setNumRows] = useState(20);\n  const [numCols, setNumCols] = useState(20);\n  const [grid, setGrid] = useState([]);\n  const [livingCells, setLivingCells] = useState(0);\n  const [heightError, setHeightError] = useState(\"\");\n  const [tempRows, setTempRows] = useState(numRows);\n  const [tempCols, setTempCols] = useState(numCols);\n  const [autoplayInterval, setAutoplayInterval] = useState(null);\n\n  useEffect(() => {\n    initializeGrid();\n  }, []);\n\n  useEffect(() => {\n    countLivingCells();\n  }, [grid]);\n\n  useEffect(() => {\n    initializeGrid();\n  }, [numRows, numCols]);\n\n  const initializeGrid = () => {\n    if (numRows > 0 && numCols > 0) {\n      const newGrid = Array.from({ length: numRows }, () =>\n        Array.from({ length: numCols }, () => (Math.random() < 0.05 ? 1 : 0))\n      );\n      setGrid(newGrid);\n    }\n  };\n\n  const toggleCell = (i, j) => {\n    const newGrid = [...grid];\n    newGrid[i][j] = newGrid[i][j] ? 0 : 1;\n    setGrid(newGrid);\n  };\n\n  const countLivingCells = () => {\n    let count = 0;\n    grid.forEach((row) => {\n      row.forEach((cell) => {\n        if (cell) count++;\n      });\n    });\n    setLivingCells(count);\n  };\n\n  const resetGrid = () => {\n    setNumRows(20);\n    setNumCols(20);\n    setTempCols(20);\n    setTempRows(20);\n    setHeightError(\"\");\n    initializeGrid();\n  };\n\n  const stepSimulation = () => {\n    const newGrid = [];\n    for (let i = 0; i < numRows; i++) {\n      const newRow = [];\n      for (let j = 0; j < numCols; j++) {\n        const neighbors = countNeighbors(i, j);\n        if (grid[i][j] === 1) {\n          if (neighbors < 2 || neighbors > 3) {\n            newRow.push(0); // Rule 1 and Rule 3\n          } else {\n            newRow.push(1); // Rule 2\n          }\n        } else {\n          if (neighbors === 3) {\n            newRow.push(1); // Rule 4\n          } else {\n            newRow.push(0);\n          }\n        }\n      }\n      newGrid.push(newRow);\n    }\n    setGrid(newGrid);\n  };\n\n  const countNeighbors = (i, j) => {\n    const offsets = [\n      [-1, -1],\n      [-1, 0],\n      [-1, 1],\n      [0, -1],\n      [0, 1],\n      [1, -1],\n      [1, 0],\n      [1, 1],\n    ];\n    let count = 0;\n    offsets.forEach(([dx, dy]) => {\n      const ni = i + dx;\n      const nj = j + dy;\n      if (\n        ni >= 0 &&\n        ni < numRows &&\n        nj >= 0 &&\n        nj < numCols &&\n        grid[ni][nj] === 1\n      ) {\n        count++;\n      }\n    });\n    return count;\n  };\n\n  const handleInputChange = (e, setter) => {\n    const value = parseInt(e.target.value);\n    if (!isNaN(value) && value >= 3 && value <= 40) {\n      setter(value);\n      setHeightError(\"\");\n    } else {\n      setHeightError(\"Please enter a number between 3 and 40\");\n    }\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      handleInputChange({ target: { value: tempRows } }, setNumRows);\n      handleInputChange({ target: { value: tempCols } }, setNumCols);\n      initializeGrid();\n    }\n  };\n\n  const handleAutoplay = () => {\n    if (autoplayInterval) {\n      clearInterval(autoplayInterval);\n      setAutoplayInterval(null);\n    } else {\n      const interval = setInterval(stepSimulation, 2000);\n      setAutoplayInterval(interval);\n    }\n  };\n\n  return (\n    <div className=\"game-container\">\n      <div className=\"grid-info\">\n        <span>Living Cells: {livingCells}</span>\n        <div>\n          <p>Set the number of rows and columns, then hit 'Enter'.</p>\n          <input\n            type=\"number\"\n            value={tempRows}\n            onChange={(e) => handleInputChange(e, setTempRows)}\n            onKeyDown={handleKeyDown}\n          />\n          <input\n            type=\"number\"\n            value={tempCols}\n            onChange={(e) => handleInputChange(e, setTempCols)}\n            onKeyDown={handleKeyDown}\n          />\n          {heightError && <div className=\"error\">{heightError}</div>}\n        </div>\n        <button onClick={resetGrid}>Reset Grid</button>\n        <button onClick={stepSimulation}>Step</button>\n        <button onClick={handleAutoplay}>\n          {autoplayInterval ? \"Stop Autoplay\" : \"Start Autoplay\"}\n        </button>\n      </div>\n      <Grid grid={grid} toggleCell={toggleCell} />\n    </div>\n  );\n};\n\nexport default GameOfLife;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}