{"ast":null,"code":"var _jsxFileName = \"/Users/yizhouchen/Desktop/conways-game-by-mingyigao/src/components/GameOfLife.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Grid from \"./Grid\";\nimport \"./GameOfLife.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameOfLife = () => {\n  _s();\n  const [numRows, setNumRows] = useState(20);\n  const [numCols, setNumCols] = useState(20);\n  const [grid, setGrid] = useState([]);\n  const [livingCells, setLivingCells] = useState(0);\n  useEffect(() => {\n    initializeGrid();\n  }, []);\n  useEffect(() => {\n    countLivingCells();\n  }, [grid]);\n  const initializeGrid = () => {\n    const newGrid = Array.from({\n      length: numRows\n    }, () => Array.from({\n      length: numCols\n    }, () => Math.random() < 0.05 ? 1 : 0));\n    setGrid(newGrid);\n  };\n  const toggleCell = (i, j) => {\n    const newGrid = [...grid];\n    newGrid[i][j] = newGrid[i][j] ? 0 : 1;\n    setGrid(newGrid);\n  };\n  const countLivingCells = () => {\n    let count = 0;\n    grid.forEach(row => {\n      row.forEach(cell => {\n        if (cell) count++;\n      });\n    });\n    setLivingCells(count);\n  };\n  const resetGrid = () => {\n    initializeGrid();\n  };\n  const stepSimulation = () => {\n    const newGrid = [];\n    for (let i = 0; i < numRows; i++) {\n      const newRow = [];\n      for (let j = 0; j < numCols; j++) {\n        const neighbors = countNeighbors(i, j);\n        if (grid[i][j] === 1) {\n          if (neighbors < 2 || neighbors > 3) {\n            newRow.push(0); // Rule 1 and Rule 3\n          } else {\n            newRow.push(1); // Rule 2\n          }\n        } else {\n          if (neighbors === 3) {\n            newRow.push(1); // Rule 4\n          } else {\n            newRow.push(0);\n          }\n        }\n      }\n      newGrid.push(newRow);\n    }\n    setGrid(newGrid);\n  };\n  const countNeighbors = (i, j) => {\n    const offsets = [[-1, -1], [-1, 0], [-1, 1], [0, -1], [0, 1], [1, -1], [1, 0], [1, 1]];\n    let count = 0;\n    offsets.forEach(([dx, dy]) => {\n      const ni = i + dx;\n      const nj = j + dy;\n      if (ni >= 0 && ni < numRows && nj >= 0 && nj < numCols && grid[ni][nj] === 1) {\n        count++;\n      }\n    });\n    return count;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Living Cells: \", livingCells]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGrid,\n        children: \"Reset Grid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stepSimulation,\n        children: \"Step\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      grid: grid,\n      toggleCell: toggleCell\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(GameOfLife, \"J5YFjr0Zu4yB9egJWPlvcPcm8dQ=\");\n_c = GameOfLife;\nexport default GameOfLife;\n\n// 开始写的...\n// const GameOfLife = () => {\n//   const [tempNumRows, setTempNumRows] = useState(20);\n//   const [tempNumCols, setTempNumCols] = useState(20);\n//   const [numRows, setNumRows] = useState(20);\n//   const [numCols, setNumCols] = useState(20);\n//   const [heightError, setHeightError] = useState(\"\");\n//   const [widthError, setWidthError] = useState(\"\");\n//   const [grid, setGrid] = useState(initialGrid());\n\n//   function initialGrid() {\n//     const grid = [];\n//     for (let i = 0; i < numRows; i++) {\n//       const row = [];\n//       for (let j = 0; j < numCols; j++) {\n//         row.push(Math.random() < 0.05 ? 1 : 0);\n//       }\n//       grid.push(row);\n//     }\n//     return grid;\n//   }\n\n//   useEffect(() => {\n//     setGrid(initialGrid());\n//   }, [numRows, numCols, tempNumRows, tempNumCols]);\n\n//   function ChangeHeight(e) {\n//     const newHeight = parseInt(e.target.value);\n//     setTempNumRows(newHeight);\n//   }\n\n//   function ChangeWidth(e) {\n//     const newWidth = parseInt(e.target.value);\n//     setTempNumCols(newWidth);\n//   }\n\n//   const handleKeyDown = (e) => {\n//     if (e.keyCode === 13) {\n//       if (tempNumRows < 3 || tempNumRows > 40) {\n//         setHeightError(\"Please enter a number between 3 and 40\");\n//       } else if (tempNumCols < 3 || tempNumCols > 40) {\n//         setWidthError(\"Please enter a number between 3 and 40\");\n//       } else {\n//         setNumRows(tempNumRows);\n//         setNumCols(tempNumCols);\n//         setHeightError(\"\");\n//         setWidthError(\"\");\n//       }\n//     }\n//   };\n\n//   function reset() {\n//     setNumCols(20);\n//     setNumRows(20);\n//     setTempNumCols(20);\n//     setTempNumRows(20);\n\n//     setGrid(initialGrid());\n//     setHeightError(\"\");\n//     setWidthError(\"\");\n//   }\n\n//   return (\n//     <div className=\"center-container\">\n//       <div>\n//         <input\n//           type=\"number\"\n//           value={tempNumRows}\n//           onChange={ChangeHeight}\n//           onKeyDown={handleKeyDown}\n//         />\n//         {heightError && <div className=\"error\">{heightError}</div>}\n\n//         <input\n//           type=\"number\"\n//           value={tempNumCols}\n//           onChange={ChangeWidth}\n//           onKeyDown={handleKeyDown}\n//         />\n//         {widthError && <div className=\"error\">{widthError}</div>}\n\n//         <button onClick={reset}>Reset</button>\n\n//         <Grid numRows={numRows} numCols={numCols} setGrid={setGrid} />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default GameOfLife;\nvar _c;\n$RefreshReg$(_c, \"GameOfLife\");","map":{"version":3,"names":["React","useState","useEffect","Grid","jsxDEV","_jsxDEV","GameOfLife","_s","numRows","setNumRows","numCols","setNumCols","grid","setGrid","livingCells","setLivingCells","initializeGrid","countLivingCells","newGrid","Array","from","length","Math","random","toggleCell","i","j","count","forEach","row","cell","resetGrid","stepSimulation","newRow","neighbors","countNeighbors","push","offsets","dx","dy","ni","nj","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/yizhouchen/Desktop/conways-game-by-mingyigao/src/components/GameOfLife.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Grid from \"./Grid\";\nimport \"./GameOfLife.css\";\n\nconst GameOfLife = () => {\n  const [numRows, setNumRows] = useState(20);\n  const [numCols, setNumCols] = useState(20);\n  const [grid, setGrid] = useState([]);\n  const [livingCells, setLivingCells] = useState(0);\n\n  useEffect(() => {\n    initializeGrid();\n  }, []);\n\n  useEffect(() => {\n    countLivingCells();\n  }, [grid]);\n\n  const initializeGrid = () => {\n    const newGrid = Array.from({ length: numRows }, () =>\n      Array.from({ length: numCols }, () => (Math.random() < 0.05 ? 1 : 0))\n    );\n    setGrid(newGrid);\n  };\n\n  const toggleCell = (i, j) => {\n    const newGrid = [...grid];\n    newGrid[i][j] = newGrid[i][j] ? 0 : 1;\n    setGrid(newGrid);\n  };\n\n  const countLivingCells = () => {\n    let count = 0;\n    grid.forEach((row) => {\n      row.forEach((cell) => {\n        if (cell) count++;\n      });\n    });\n    setLivingCells(count);\n  };\n\n  const resetGrid = () => {\n    initializeGrid();\n  };\n\n  const stepSimulation = () => {\n    const newGrid = [];\n    for (let i = 0; i < numRows; i++) {\n      const newRow = [];\n      for (let j = 0; j < numCols; j++) {\n        const neighbors = countNeighbors(i, j);\n        if (grid[i][j] === 1) {\n          if (neighbors < 2 || neighbors > 3) {\n            newRow.push(0); // Rule 1 and Rule 3\n          } else {\n            newRow.push(1); // Rule 2\n          }\n        } else {\n          if (neighbors === 3) {\n            newRow.push(1); // Rule 4\n          } else {\n            newRow.push(0);\n          }\n        }\n      }\n      newGrid.push(newRow);\n    }\n    setGrid(newGrid);\n  };\n\n  const countNeighbors = (i, j) => {\n    const offsets = [\n      [-1, -1],\n      [-1, 0],\n      [-1, 1],\n      [0, -1],\n      [0, 1],\n      [1, -1],\n      [1, 0],\n      [1, 1],\n    ];\n    let count = 0;\n    offsets.forEach(([dx, dy]) => {\n      const ni = i + dx;\n      const nj = j + dy;\n      if (\n        ni >= 0 &&\n        ni < numRows &&\n        nj >= 0 &&\n        nj < numCols &&\n        grid[ni][nj] === 1\n      ) {\n        count++;\n      }\n    });\n    return count;\n  };\n\n  return (\n    <div className=\"game-container\">\n      <div className=\"grid-info\">\n        <span>Living Cells: {livingCells}</span>\n        <button onClick={resetGrid}>Reset Grid</button>\n        <button onClick={stepSimulation}>Step</button>\n      </div>\n      <Grid grid={grid} toggleCell={toggleCell} />\n    </div>\n  );\n};\n\nexport default GameOfLife;\n\n// 开始写的...\n// const GameOfLife = () => {\n//   const [tempNumRows, setTempNumRows] = useState(20);\n//   const [tempNumCols, setTempNumCols] = useState(20);\n//   const [numRows, setNumRows] = useState(20);\n//   const [numCols, setNumCols] = useState(20);\n//   const [heightError, setHeightError] = useState(\"\");\n//   const [widthError, setWidthError] = useState(\"\");\n//   const [grid, setGrid] = useState(initialGrid());\n\n//   function initialGrid() {\n//     const grid = [];\n//     for (let i = 0; i < numRows; i++) {\n//       const row = [];\n//       for (let j = 0; j < numCols; j++) {\n//         row.push(Math.random() < 0.05 ? 1 : 0);\n//       }\n//       grid.push(row);\n//     }\n//     return grid;\n//   }\n\n//   useEffect(() => {\n//     setGrid(initialGrid());\n//   }, [numRows, numCols, tempNumRows, tempNumCols]);\n\n//   function ChangeHeight(e) {\n//     const newHeight = parseInt(e.target.value);\n//     setTempNumRows(newHeight);\n//   }\n\n//   function ChangeWidth(e) {\n//     const newWidth = parseInt(e.target.value);\n//     setTempNumCols(newWidth);\n//   }\n\n//   const handleKeyDown = (e) => {\n//     if (e.keyCode === 13) {\n//       if (tempNumRows < 3 || tempNumRows > 40) {\n//         setHeightError(\"Please enter a number between 3 and 40\");\n//       } else if (tempNumCols < 3 || tempNumCols > 40) {\n//         setWidthError(\"Please enter a number between 3 and 40\");\n//       } else {\n//         setNumRows(tempNumRows);\n//         setNumCols(tempNumCols);\n//         setHeightError(\"\");\n//         setWidthError(\"\");\n//       }\n//     }\n//   };\n\n//   function reset() {\n//     setNumCols(20);\n//     setNumRows(20);\n//     setTempNumCols(20);\n//     setTempNumRows(20);\n\n//     setGrid(initialGrid());\n//     setHeightError(\"\");\n//     setWidthError(\"\");\n//   }\n\n//   return (\n//     <div className=\"center-container\">\n//       <div>\n//         <input\n//           type=\"number\"\n//           value={tempNumRows}\n//           onChange={ChangeHeight}\n//           onKeyDown={handleKeyDown}\n//         />\n//         {heightError && <div className=\"error\">{heightError}</div>}\n\n//         <input\n//           type=\"number\"\n//           value={tempNumCols}\n//           onChange={ChangeWidth}\n//           onKeyDown={handleKeyDown}\n//         />\n//         {widthError && <div className=\"error\">{widthError}</div>}\n\n//         <button onClick={reset}>Reset</button>\n\n//         <Grid numRows={numRows} numCols={numCols} setGrid={setGrid} />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default GameOfLife;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}