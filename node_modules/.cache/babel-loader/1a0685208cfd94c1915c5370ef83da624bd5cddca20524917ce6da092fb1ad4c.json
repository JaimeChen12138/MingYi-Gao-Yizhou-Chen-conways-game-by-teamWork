{"ast":null,"code":"var _jsxFileName = \"/Users/yizhouchen/Desktop/conways-game-by-mingyigao/src/components/Grid.js\";\nimport React from \"react\";\nimport \"./Grid.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Grid = ({\n  grid,\n  toggleCell,\n  cellChangeCount\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: grid.length > 0 && grid.map((row, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: row.map((cell, j) => {\n        const color = calculateColor(cellChangeCount[i][j]);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell\",\n          style: {\n            backgroundColor: color\n          },\n          onClick: () => toggleCell(i, j)\n        }, `${i}-${j}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 17\n        }, this);\n      })\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = Grid;\nconst calculateColor = count => {\n  // 根据 `cellChangeCount` 中的值计算颜色\n  // 这里是一个示例实现，你可以根据自己的需求来设置不同的颜色\n  const colorGradient = [\"rgb(255, 255, 255)\",\n  // 指示细胞死亡的颜色\n  \"rgb(255, 0, 0)\" // 指示细胞存活的颜色\n  ];\n\n  // 如果 count 为 null 或 undefined，则使用默认的死亡颜色\n  if (count === null || count === undefined) {\n    return colorGradient[0];\n  }\n\n  // 根据 count 的值在颜色梯度中进行插值\n  const maxCount = 10; // 假设细胞最多有10次变化\n  const index = Math.floor(count / maxCount * (colorGradient.length - 1));\n  return colorGradient[index];\n};\nexport default Grid;\n\n// import React from \"react\";\n// import \"./Grid.css\";\n\n// const Grid = ({ grid, toggleCell }) => {\n//   return (\n//     <div className=\"grid\">\n//       {grid.length > 0 &&\n//         grid.map((row, i) => (\n//           <div key={i} className=\"row\">\n//             {row.map((cell, j) => (\n//               <div\n//                 key={`${i}-${j}`}\n//                 className={`cell ${cell ? \"alive\" : \"dead\"}`}\n//                 onClick={() => toggleCell(i, j)}\n//               />\n//             ))}\n//           </div>\n//         ))}\n//     </div>\n//   );\n// };\n\n// export default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Grid","grid","toggleCell","cellChangeCount","className","children","length","map","row","i","cell","j","color","calculateColor","style","backgroundColor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","count","colorGradient","undefined","maxCount","index","Math","floor","$RefreshReg$"],"sources":["/Users/yizhouchen/Desktop/conways-game-by-mingyigao/src/components/Grid.js"],"sourcesContent":["import React from \"react\";\nimport \"./Grid.css\";\n\nconst Grid = ({ grid, toggleCell, cellChangeCount }) => {\n  return (\n    <div className=\"grid\">\n      {grid.length > 0 &&\n        grid.map((row, i) => (\n          <div key={i} className=\"row\">\n            {row.map((cell, j) => {\n              const color = calculateColor(cellChangeCount[i][j]);\n              return (\n                <div\n                  key={`${i}-${j}`}\n                  className=\"cell\"\n                  style={{ backgroundColor: color }}\n                  onClick={() => toggleCell(i, j)}\n                />\n              );\n            })}\n          </div>\n        ))}\n    </div>\n  );\n};\n\nconst calculateColor = (count) => {\n  // 根据 `cellChangeCount` 中的值计算颜色\n  // 这里是一个示例实现，你可以根据自己的需求来设置不同的颜色\n  const colorGradient = [\n    \"rgb(255, 255, 255)\", // 指示细胞死亡的颜色\n    \"rgb(255, 0, 0)\", // 指示细胞存活的颜色\n  ];\n\n  // 如果 count 为 null 或 undefined，则使用默认的死亡颜色\n  if (count === null || count === undefined) {\n    return colorGradient[0];\n  }\n\n  // 根据 count 的值在颜色梯度中进行插值\n  const maxCount = 10; // 假设细胞最多有10次变化\n  const index = Math.floor((count / maxCount) * (colorGradient.length - 1));\n  return colorGradient[index];\n};\n\nexport default Grid;\n\n// import React from \"react\";\n// import \"./Grid.css\";\n\n// const Grid = ({ grid, toggleCell }) => {\n//   return (\n//     <div className=\"grid\">\n//       {grid.length > 0 &&\n//         grid.map((row, i) => (\n//           <div key={i} className=\"row\">\n//             {row.map((cell, j) => (\n//               <div\n//                 key={`${i}-${j}`}\n//                 className={`cell ${cell ? \"alive\" : \"dead\"}`}\n//                 onClick={() => toggleCell(i, j)}\n//               />\n//             ))}\n//           </div>\n//         ))}\n//     </div>\n//   );\n// };\n\n// export default Grid;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGA,CAAC;EAAEC,IAAI;EAAEC,UAAU;EAAEC;AAAgB,CAAC,KAAK;EACtD,oBACEJ,OAAA;IAAKK,SAAS,EAAC,MAAM;IAAAC,QAAA,EAClBJ,IAAI,CAACK,MAAM,GAAG,CAAC,IACdL,IAAI,CAACM,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC,kBACdV,OAAA;MAAaK,SAAS,EAAC,KAAK;MAAAC,QAAA,EACzBG,GAAG,CAACD,GAAG,CAAC,CAACG,IAAI,EAAEC,CAAC,KAAK;QACpB,MAAMC,KAAK,GAAGC,cAAc,CAACV,eAAe,CAACM,CAAC,CAAC,CAACE,CAAC,CAAC,CAAC;QACnD,oBACEZ,OAAA;UAEEK,SAAS,EAAC,MAAM;UAChBU,KAAK,EAAE;YAAEC,eAAe,EAAEH;UAAM,CAAE;UAClCI,OAAO,EAAEA,CAAA,KAAMd,UAAU,CAACO,CAAC,EAAEE,CAAC;QAAE,GAH1B,GAAEF,CAAE,IAAGE,CAAE,EAAC;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIjB,CAAC;MAEN,CAAC;IAAC,GAXMX,CAAC;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAYN,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAACC,EAAA,GArBIrB,IAAI;AAuBV,MAAMa,cAAc,GAAIS,KAAK,IAAK;EAChC;EACA;EACA,MAAMC,aAAa,GAAG,CACpB,oBAAoB;EAAE;EACtB,gBAAgB,CAAE;EAAA,CACnB;;EAED;EACA,IAAID,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKE,SAAS,EAAE;IACzC,OAAOD,aAAa,CAAC,CAAC,CAAC;EACzB;;EAEA;EACA,MAAME,QAAQ,GAAG,EAAE,CAAC,CAAC;EACrB,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAAEN,KAAK,GAAGG,QAAQ,IAAKF,aAAa,CAACjB,MAAM,GAAG,CAAC,CAAC,CAAC;EACzE,OAAOiB,aAAa,CAACG,KAAK,CAAC;AAC7B,CAAC;AAED,eAAe1B,IAAI;;AAEnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAqB,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}